name: Build, Sign, and Release InterviewAssistant

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        shell: cmd
        run: |
          if exist requirements.txt (
            pip install -r requirements.txt
          )
          pip install pyinstaller

      - name: Build EXE
        run: pyinstaller --onefile it.py --name InterviewAssistant
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: List dist folder (debug)
        run: dir dist

      - name: Restore signing certificate
        shell: pwsh
        run: |
          $b64 = "${{ secrets.SIGNING_CERT_B64 }}"
          $bytes = [System.Convert]::FromBase64String($b64)
          [IO.File]::WriteAllBytes("signing-cert.pfx", $bytes)
          Write-Host "✅ PFX file restored successfully."

      - name: Find signtool dynamically
        id: find_signtool
        shell: pwsh
        run: |
          $signtool = Get-ChildItem "C:\Program Files (x86)\Windows Kits" -Recurse -ErrorAction SilentlyContinue |
                      Where-Object { $_.Name -eq "signtool.exe" } |
                      Select-Object -First 1 -ExpandProperty FullName
          if (-not $signtool) { throw "❌ signtool.exe not found" }
          Write-Host "✅ Using signtool at: $signtool"
          echo "SIGNSDK=$signtool" >> $env:GITHUB_ENV

      - name: Sign the EXE
        shell: pwsh
        run: |
          & "$env:SIGNSDK" sign `
            /f signing-cert.pfx `
            /p "${{ secrets.SIGNING_CERT_PASSWORD }}" `
            /tr http://timestamp.digicert.com `
            /td sha256 /fd sha256 `
            dist\InterviewAssistant.exe
          Write-Host "✅ Signing completed successfully."

      - name: Bump version and create tag
        id: version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: patch

      - name: Upload signed artifact
        uses: actions/upload-artifact@v4
        with:
          name: InterviewAssistant-signed
          path: dist/InterviewAssistant.exe

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.new_tag }}
          name: "InterviewAssistant ${{ steps.version.outputs.new_tag }}"
          files: dist/InterviewAssistant.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
